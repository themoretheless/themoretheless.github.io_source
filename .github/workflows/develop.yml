name: Deploy to GitHub Pages

# Run workflow on every push to the master branch
on:
  push:
    branches: [ develop ]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
 

    steps:
    - name: Checkout current repository
      shell: pwsh
      run: |
        ls
        Set-Item -Path Env:repoSourcePath -Value "/home/runner/work/$Env:GITHUB_REPOSITORY"
        Write-Host $Env:actionPath
        if(!(test-path $Env:repoSourcePath))
        {
          New-Item -ItemType Directory -Path $Env:repoSourcePath
        }
        cd $Env:repoSourcePath

        Write-Host $Env:GITHUB_SERVER_URL/$Env:GITHUB_REPOSITORY
        git clone $Env:GITHUB_SERVER_URL/$Env:GITHUB_REPOSITORY /home/runner/work/fdg789789hdfgh
    

    - name: Checkout current repository2
      shell: pwsh
      run: |     
        Get-Location | Write-Host
        tree
  
    # sets up .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-preview.3.21202.5




    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish src/themoretheless.github.io_source/themoretheless.github.io_source.csproj -c Release -o release --nologo
      
    - name: Install PSScriptAnalyzer module
      shell: pwsh
      run: |
           ls
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
